/*
account.go
Created at 08.04.22 by emrearmagan
Copyright Â© go-social. All rights reserved.
*/

package reddit

import (
	"go-social/social"
	"go-social/social/oauth/oauth2"
)

const (
	RefreshBase = "https://www.reddit.com"
	RefreshPath = "/api/v1/access_token"
)

// AccountService provides methods for user credentials
type AccountService struct {
	oauth2    *oauth2.OAuth2
	userAgent string
}

// newAccountService returns a new Reddit UserService.
func newAccountService(oauth2 *oauth2.OAuth2, userAgent string) *AccountService {
	return &AccountService{
		oauth2:    oauth2,
		userAgent: userAgent,
	}
}

// RefreshToken , a new access token can be generated by supplying the refresh token originally obtained during
// authorization code exchange.
// https://github.com/reddit-archive/reddit/wiki/OAuth2#refreshing-the-tok
func (a *AccountService) RefreshToken() (*oauth2.OAuthRefreshResponse, error) {
	oauthResp := new(OAuth2RefreshResponse)
	apiError := new(APIError)

	err := a.oauth2.RefreshToken(RefreshBase, RefreshPath, oauthResp, apiError)
	a.oauth2.UpdateToken(oauth2.NewToken(oauthResp.AccessToken, oauthResp.RefreshToken))
	return &oauth2.OAuthRefreshResponse{
		Token: oauth2.Token{
			Token:        oauthResp.AccessToken,
			RefreshToken: oauthResp.RefreshToken,
		},
		TokenType: oauthResp.TokenType,
		ExpiresIn: oauthResp.ExpiresIn,
		Scope:     oauthResp.Scope,
	}, social.CheckError(err)
}
